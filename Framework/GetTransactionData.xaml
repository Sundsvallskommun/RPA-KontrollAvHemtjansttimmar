<Activity mc:Ignorable="sap sap2010" x:Class="GetTransactionData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="out_TransactionItem" Type="OutArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="out_TransactionField1" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="out_TransactionField2" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="out_TransactionID" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="This variable can be used in case transactions are stored in a DataTable (for example, after being retrieved from a spreadsheet)." Name="io_dt_TransactionData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="io_dt_AddToExcelFile" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_dt_Insatser" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_TotalNumberOfRows" Type="InOutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2128,1805</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get a transaction item from a specified source (e.g., Orchestrator queues, spreadsheets, databases, mailboxes or web APIs). &#xA;&#xA;If there are no transaction items remaining, out_TransactionItem is set to Nothing, which leads to the End Process state. &#xA;&#xA;For cases in which there is only a single transaction (i.e., a linear process), use an If activity to check whether the argument in_TransactionNumber has the value 1 (meaning it is the first and only transaction) and assign the transaction item to out_TransactionItem. For any other value of in_TransactionNumber, out_TransactionItem should be set to Nothing.&#xA;&#xA;If there are multiple transactions, use the argument in_TransactionNumber as an index to retrieve the correct transaction to be processed. If there are no more transactions left, it is necessary to set out_TransactionItem to Nothing, thus ending the process." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="696,1740" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="OrchestratorFolderPath" />
      <Variable x:TypeArguments="x:String" Name="ExcelFolder" />
      <Variable x:TypeArguments="x:String" Name="ProcessedSuffix" />
      <Variable x:TypeArguments="x:String" Name="ProcessingSuffix" />
      <Variable x:TypeArguments="x:String" Name="ExcelFilePrefix" />
      <Variable x:TypeArguments="x:String" Name="QueueName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_OrgExcelFile" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_UploadQueue" />
      <Variable x:TypeArguments="ss:SecureString" Name="ExcelPasswordSecureString" />
      <Variable x:TypeArguments="x:String" Name="ExcelPassword" />
      <Variable x:TypeArguments="x:String" Name="SheetName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="634,52" sap2010:WorkflowViewState.IdRef="CommentOut_13">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,252" sap2010:WorkflowViewState.IdRef="Sequence_137">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message Get Transaction Item" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Get the transaction item&quot;]" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;ExcelPassword&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="634,143" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[ExcelPasswordSecureString]" />
    <Assign DisplayName="Private: Assign Excel Password" sap:VirtualizedContainerService.HintSize="634,82" sap2010:WorkflowViewState.IdRef="Assign_54">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ExcelPassword]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.net.NetworkCredential("",ExcelPasswordSecureString).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:MultipleAssign DisplayName="Multiple Assign From Config File" sap:VirtualizedContainerService.HintSize="634,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[QueueName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorQueueName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ProcessedSuffix]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ProcessedSuffix").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ProcessingSuffix]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ProcessingSuffix").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExcelFilePrefix]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ExcelFilePrefix").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExcelFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ExcelFolderPath").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("SheetName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <Flowchart sap:VirtualizedContainerService.HintSize="634,649" sap2010:WorkflowViewState.IdRef="Flowchart_2">
      <Flowchart.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="OriginalTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="FilteredTable" />
      </Flowchart.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,75</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
          <x:Double x:Key="Height">612.04</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID0</x:Reference>
      </Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,179.5 300,228.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RetryScope DisplayName="Retry Get transaction item" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="[Cint(in_Config(&quot;RetryNumberGetTransactionItem&quot;))]">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <TryCatch DisplayName="Try Catch Get transaction item" sap:VirtualizedContainerService.HintSize="438,503" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                <TryCatch.Try>
                  <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get a transaction item from the specified Orchestrator queue.&#xA;If queues are not used in this process, replace this activity with the appropriated logic to retrieve transaction items.&#xA;For example, if transactions are rows from a DataTable, the row corresponding to the current transaction is retrieved at this point." DisplayName="Get transaction item" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,275" sap2010:WorkflowViewState.IdRef="GetQueueItem_3" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" TransactionItem="[out_TransactionItem]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetQueueItem>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Catch Get transaction item" sap:VirtualizedContainerService.HintSize="450,231" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message Get transaction item faulted" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Could not retrieve transaction item. Exception message: &quot;+exception.Message]" />
                        <Rethrow DisplayName="Rethrow Get transaction item faulted" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean" />
          </ui:RetryScope.Condition>
        </ui:RetryScope>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID1" Condition="[out_TransactionItem isNot Nothing]" DisplayName="Any Transaction Found?" sap:VirtualizedContainerService.HintSize="133,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">233.5,228.5</av:Point>
                <av:Size x:Key="ShapeSize">133,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">233.5,272 203.5,272 203.5,397.5 200,397.5</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">366.5,272 440,272 440,356.04</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">0,328.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,138</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Write data to the added log fields that identify the transaction." DisplayName="Add transaction information to log fields" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign out_TransactionID" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[out_TransactionItem.Reference]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign out_TransactionField1" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_25">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_TransactionField1]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign out_TransactionField2" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_TransactionField2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">340,356.04</av:Point>
                    <av:Size x:Key="ShapeSize">200,81</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">440,437.04 440,472.04</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Check If Any Excel File" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_32">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="temp" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FolderExistsX DisplayName="Folder Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="958,133" sap2010:WorkflowViewState.IdRef="FolderExistsX_2" Path="[ExcelFolder]" />
                  <If Condition="[Not FolderExists]" DisplayName="If Folder Doesn't Exists" sap:VirtualizedContainerService.HintSize="958,52" sap2010:WorkflowViewState.IdRef="If_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_44">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw DisplayName="Throw E" Exception="[new Exception(&quot;Did not find folder with path '&quot; + ExcelFolder +&quot;'&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_45">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="Regi*.xlsx" Folder="[ExcelFolder]" sap:VirtualizedContainerService.HintSize="958,5486" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="True">
                    <ui:ForEachFileX.Body>
                      <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                        <ActivityAction.Argument1>
                          <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                        </ActivityAction.Argument1>
                        <ActivityAction.Argument2>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                        </ActivityAction.Argument2>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="924,5228" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[Not CurrentFile.Name.Contains(ProcessedSuffix) AndAlso Not CurrentFile.Name.Contains(ProcessingSuffix)]" DisplayName="If Not Finished Processing Or Under Processing" sap:VirtualizedContainerService.HintSize="862,5117" sap2010:WorkflowViewState.IdRef="If_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="828,4935" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="786,4847" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="RenamedExcelFile" />
                                    <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dt_HanteraEj" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign Renamed Filename" sap:VirtualizedContainerService.HintSize="724,82" sap2010:WorkflowViewState.IdRef="Assign_53">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[RenamedExcelFile]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentFile.FullName.Replace(CurrentFile.Extension,ProcessingSuffix + CurrentFile.Extension)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[RenamedExcelFile]" DisplayName="Private: Move File" sap:VirtualizedContainerService.HintSize="724,159" sap2010:WorkflowViewState.IdRef="MoveFile_3" Path="[CurrentFile.FullName]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MoveFile>
                                  <Sequence DisplayName="ladda upp i kö - person" sap:VirtualizedContainerService.HintSize="724,4259" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:List(scg:IEnumerable(sd:DataRow))" Name="GruopedData" />
                                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New Dictionary(Of String, Object)]" Name="QueueItemData" />
                                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ListDistinct" />
                                      <Variable x:TypeArguments="sd:DataTable" Name="io_dt_Dubbletter" />
                                      <Variable x:TypeArguments="x:Int32" Name="TotRowNumber" />
                                      <Variable x:TypeArguments="x:Int32" Name="NrOfPeople" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_OrgExcelFile]" DisplayName="Private: Read Range Workbook" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="ReadRange_1" Password="[ExcelPassword]" SheetName="[SheetName]" WorkbookPath="[RenamedExcelFile]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ReadRange>
                                    <ui:FilterDataTable DataTable="[dt_OrgExcelFile]" DisplayName="Private: Filter Data Table - lägg till/välj kolumner att skicka med i köärendet" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_UploadQueue]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                                          <InArgument x:TypeArguments="x:String">["INSATS"]</InArgument>
                                          <InArgument x:TypeArguments="x:String">["KVANTITET"]</InArgument>
                                          <InArgument x:TypeArguments="x:String">["PER"]</InArgument>
                                          <InArgument x:TypeArguments="x:String">["DAG"]</InArgument>
                                          <InArgument x:TypeArguments="x:String">["RESURS"]</InArgument>
                                          <InArgument x:TypeArguments="x:String">["GILPERIOD"]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <Assign DisplayName="Assign TotRowNumber" sap:VirtualizedContainerService.HintSize="662,82" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[TotRowNumber]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[dt_UploadQueue.RowCount - 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="TempRow" DataTable="[dt_UploadQueue]" DisplayName="Private: Add Data Column - TempRow" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataColumn>
                                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="TotRowNumber" DataTable="[dt_UploadQueue]" DisplayName="Private: Add Data Column -TotRowNumber" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataColumn>
                                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="RowIndex" DataTable="[dt_UploadQueue]" DisplayName="Private: Add Data Column -RowIndex" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_15">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataColumn>
                                    <ui:FilterDataTable DataTable="[dt_OrgExcelFile]" DisplayName="Private: Filter Data Table -HanteraEj" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[dt_HanteraEj]" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <x:Null />
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="HANTERAS EJ" DataTable="[dt_HanteraEj]" DisplayName="Add Data Column - Hanteras ej" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataColumn>
                                    <ui:FilterDataTable DataTable="[dt_HanteraEj]" DisplayName="Update -HanteraEj" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[dt_HanteraEj]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">["HANTERAS EJ"]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <ui:FilterDataTable DataTable="[dt_HanteraEj]" DisplayName="Clone empty dt to io_dt_AddToExcelFile" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[io_dt_AddToExcelFile]" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">["HANTERAS EJ"]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <Assign DisplayName="Get ListDistinct" sap:VirtualizedContainerService.HintSize="662,82" sap2010:WorkflowViewState.IdRef="Assign_31">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[ListDistinct]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[dt_OrgExcelFile.AsEnumerable.Select(function (p) p.Item("PNR").ToString).Distinct]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="662,82" sap2010:WorkflowViewState.IdRef="Assign_55">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[NrOfPeople]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[ListDistinct.Count]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - distinct" sap:VirtualizedContainerService.HintSize="662,2954" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ListDistinct]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="PNumber" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,2768" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:Int32" Name="RowIndex" />
                                              <Variable x:TypeArguments="x:Int32" Name="NumberOfRows" />
                                              <Variable x:TypeArguments="x:String" Name="RefName" />
                                              <Variable x:TypeArguments="x:Object" Name="TempRow" />
                                              <Variable x:TypeArguments="scg:List(x:Int32)" Default="[New List(Of Int32)]" Name="RowIndexList" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[dt_OrgExcelFile]" DisplayName="Private: Lookup Data Table" sap:VirtualizedContainerService.HintSize="586,52" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="PNR" LookupValue="[PNumber]" RowIndex="[RowIndex]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:LookupDataTable>
                                            <Assign DisplayName="Private: Assign - NumberOfRows " sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_32">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[NumberOfRows]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[dt_OrgExcelFile.AsEnumerable().Count(Function(row) row("PNR").ToString() = PNumber)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InterruptibleWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Iterates through all rows for a person to get all row numbers that belong to the same person. Is called TempRow" Condition="[NumberOfRows &gt;  0 AndAlso dt_OrgExcelFile.RowCount &gt; RowIndex]" DisplayName="While - get rowindex per person" sap:VirtualizedContainerService.HintSize="586,109" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                              <ui:InterruptibleWhile.Body>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[dt_OrgExcelFile.Rows(rowindex)(&quot;PNR&quot;).ToString = PNumber = true]" DisplayName="If Row contains PNR - new &quot;PNR&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_13">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,590" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign DisplayName="Assign - RefName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[RefName]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[RefName + RowIndex.ToString + ","]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Update NumberOfRows" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[NumberOfRows]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[NumberOfRows - 1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                                                          <InvokeMethod.TargetObject>
                                                            <InArgument x:TypeArguments="scg:List(x:Int32)">[RowIndexList]</InArgument>
                                                          </InvokeMethod.TargetObject>
                                                          <InArgument x:TypeArguments="x:Int32">[RowIndex]</InArgument>
                                                        </InvokeMethod>
                                                        <Assign DisplayName="Update RowIndex" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[RowIndex]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[RowIndex + 1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign DisplayName="Update RowIndex 2" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[RowIndex]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[RowIndex + 1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ui:InterruptibleWhile.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InterruptibleWhile>
                                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each RowIndexList" sap:VirtualizedContainerService.HintSize="586,2164" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[RowIndexList]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="x:Object">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="RowIndexItem" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1978" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Object" Name="QueueObject" />
                                                      <Variable x:TypeArguments="sd:DataRow" Name="RowQueueItem" />
                                                      <Variable x:TypeArguments="x:String" Name="InsatserNotToHandle" />
                                                      <Variable x:TypeArguments="x:String" Name="Name" />
                                                      <Variable x:TypeArguments="x:Boolean" Name="UploadToQueue" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign - QueueItemData" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(Of String, Object)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign InsatserNotToHandle" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[InsatserNotToHandle]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[in_Config("InsatserNotToHandle").ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign Name for Item" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[System.IO.Path.GetFileName(RenamedExcelFile) + "-" + RowIndexItem.ToString +"-" + NrOfPeople.ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,273" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,194" sap2010:WorkflowViewState.IdRef="Sequence_132">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Denna är orginal" Code="Try&#xA;    ' Din ursprungliga kod&#xA;    Dim insatsStr As String = InsatserNotToHandle.ToLower()&#xA;&#xA;    ' Dela upp strängen i en array baserat på semikolon&#xA;    Dim insatser As String() = insatsStr.Split(&quot;;&quot;c)&#xA;&#xA;    ' Hämta värdet från datatabellen för den aktuella raden&#xA;    Dim insatsFromRow As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;INSATS&quot;).ToString().ToLower()&#xA;    &#xA;    ' Variabel för att hålla reda på om något matchar&#xA;    Dim matchFound As Boolean = False&#xA;&#x9;&#xA;&#x9;Dim periodOfValidity As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;GILPERIOD&quot;).ToString().Trim()&#xA;    Console.WriteLine(&quot;SperiodOfValidity&quot;+ periodOfValidity.ToString)&#xA;&#xA;&#xA;    ' Loopa genom varje insats i arrayen och kolla om den finns i cellens värde&#xA;    For Each insats As String In insatser&#xA;        If insatsFromRow Is Nothing OrElse String.IsNullOrEmpty(insatsFromRow) OrElse _&#xA;           insatsFromRow.Equals(insats) OrElse insatsFromRow.StartsWith(insats) Then&#xA;            matchFound = True&#xA;            Exit For ' Avsluta loopen om vi hittar en matchning&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Om ingen matchning hittades i insatser, kolla i dt_Insatser&#xA;    If Not matchFound Then&#xA;        For Each row As DataRow In dt_Insatser.Rows&#xA;            Dim insatsValue As String = row(&quot;Insats i Procapita&quot;).ToString().ToLower()&#xA;&#xA;            ' Kontrollera om insatsFromRow matchar något i kolumnen &quot;Insats i Procapita&quot;&#xA;            If insatsValue.Equals(insatsFromRow) AndAlso _&#xA;               insatsValue IsNot Nothing AndAlso insatsFromRow IsNot Nothing Then&#xA;                matchFound = False&#xA;                Exit For ' Avsluta loopen om en matchning hittas&#xA;&#x9;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;&#x9;matchFound = True&#xA;            End If&#xA;        Next&#xA;    End If&#xA;&#xA;    ' Kontrollera om vi hittade en matchning&#xA;    If matchFound Then&#xA;        ' Gör något om en matchning hittades&#xA;        dt_HanteraEj.Rows(CInt(RowIndexItem))(&quot;Hanteras ej&quot;) = &quot;Hanteras ej.&quot;&#xA;    Else&#xA;        ' Lägg till rad i kö (Queue) med relevant information om ingen matchning hittades&#xA;        UploadToQueue = True&#xA;    End If&#xA;&#xA;Catch ex As Exception&#xA;    ' Logga undantaget för att se exakt vad som orsakar felet&#xA;    Console.WriteLine(&quot;Fel: &quot; &amp; ex.Message)&#xA;    Console.WriteLine(&quot;Stack Trace: &quot; &amp; ex.StackTrace)&#xA;End Try&#xA;" DisplayName="Private: Remove Insatser Not to handle" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
                                                            <ui:InvokeCode.Arguments>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_OrgExcelFile">[dt_OrgExcelFile]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="InsatserNotToHandle">[InsatserNotToHandle]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="RowIndexItem">[CInt(RowIndexItem)]</InArgument>
                                                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt_HanteraEj">[dt_HanteraEj]</InOutArgument>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_UploadQueue">[dt_UploadQueue]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="RefName">[RefName]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="TotRowNumber">[TotRowNumber]</InArgument>
                                                              <OutArgument x:TypeArguments="x:Boolean" x:Key="UploadToQueue">[UploadToQueue]</OutArgument>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Insatser">[in_dt_Insatser]</InArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="test 2, org + inte org..&#xA;" Code="Try&#xA;    ' Din ursprungliga kod&#xA;    Dim insatsStr As String = InsatserNotToHandle.ToLower()&#xA;&#xA;    ' Dela upp strängen i en array baserat på semikolon&#xA;    Dim insatser As String() = insatsStr.Split(&quot;;&quot;c)&#xA;&#xA;    ' Hämta värdet från datatabellen för den aktuella raden&#xA;    Dim insatsFromRow As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;INSATS&quot;).ToString().ToLower()&#xA;    &#xA;    ' Variabel för att hålla reda på om något matchar&#xA;    Dim matchFound As Boolean = False&#xA;&#x9;&#xA;    Dim periodOfValidity As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;GILPERIOD&quot;).ToString().Trim()&#xA;    Dim endDate As String = String.Empty ' Deklarera endDate här&#xA;&#x9;&#xA;    ' Kontrollera periodOfValidity&#xA;    If Not String.IsNullOrEmpty(periodOfValidity) Then&#xA;        Dim dateParts As String() = periodOfValidity.Split(&quot;-&quot;c)&#xA;        ' Trimma och hämta det sista datumet&#xA;        If dateParts.Length &gt; 1 Then&#xA;            endDate = dateParts(1).Trim() ' Sätt värdet av endDate&#xA;        End If&#xA;    Else           &#xA;        matchFound = True&#xA;    End If&#xA;&#xA;    ' Loopa genom varje insats i arrayen och kolla om den finns i cellens värde&#xA;    For Each insats As String In insatser&#xA;        If insatsFromRow Is Nothing OrElse String.IsNullOrEmpty(insatsFromRow) OrElse _&#xA;           insatsFromRow.Equals(insats) OrElse insatsFromRow.StartsWith(insats) Then&#xA;            matchFound = True&#xA;            Exit For ' Avsluta loopen om vi hittar en matchning&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Om ingen matchning hittades i insatser, kolla i dt_Insatser&#xA;    If Not matchFound Then&#xA;        For Each row As DataRow In dt_Insatser.Rows&#xA;            Dim insatsValue As String = row(&quot;Insats i Procapita&quot;).ToString().ToLower()&#xA;&#xA;            ' Kontrollera om insatsFromRow matchar något i kolumnen &quot;Insats i Procapita&quot;&#xA;            If insatsValue.Equals(insatsFromRow) AndAlso _&#xA;               insatsValue IsNot Nothing AndAlso insatsFromRow IsNot Nothing Then&#xA;                matchFound = False&#xA;                Exit For ' Avsluta loopen om en matchning hittas&#xA;            Else&#xA;                matchFound = True&#xA;            End If&#xA;        Next&#xA;    End If&#xA;&#x9;&#xA;    ' TREDJE CHECKEN - Kolla om sista tecknet i periodOfValidity är en siffra, &quot;-&quot; eller något annat&#xA;    If Not matchFound Then&#xA;        Console.WriteLine(&quot;inne i tredje checken: &quot; + periodOfValidity + &quot; &amp;&amp;&amp;&amp;&amp;&amp;&amp; endate: &quot; + endDate)&#xA;        ' Kontrollera om sista tecknet är en siffra eller ett streck&#xA;        If Not String.IsNullOrEmpty(periodOfValidity) Then&#xA;            Dim lastChar As Char = periodOfValidity.Last() ' Hämta sista tecknet i strängen&#xA;&#x9;&#x9;&#x9;&#xA;            ' Kolla om den är öppen (sista tecknet är '-')&#xA;            If lastChar = &quot;-&quot;c Then&#xA;                matchFound = False ' Öppen giltighetsperiod, och hanteras&#xA;                Console.WriteLine(&quot;öppen gilt.&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;            ' Kontrollera om endDate är giltigt och ej tomt&#xA;            ElseIf Not String.IsNullOrEmpty(endDate) Then&#xA;                ' Hämta första dagen i förra månaden&#xA;                Dim firstDayOfMonth As DateTime = New DateTime(Now.Year, Now.Month, 1)&#xA;&#xA;                ' Konvertera endDate till ett DateTime-objekt för jämförelse&#xA;                Dim parsedEndDate As DateTime&#xA;                Dim dateFormat As String = &quot;yyyyMMdd&quot; ' Specificera formatet du förväntar dig&#xA;&#xA;                ' Konvertera endDate till DateTime&#xA;                If DateTime.TryParseExact(endDate, dateFormat, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, parsedEndDate) Then&#xA;                    Console.WriteLine(&quot;Datum end: &quot; + endDate + &quot; firstDayOfMonth: &quot; + firstDayOfMonth.ToString(&quot;yyyyMMdd&quot;))&#xA;                    ' Kolla om endDate är tidigare än den första dagen i förra månaden&#xA;                    If parsedEndDate &lt;= firstDayOfMonth Then&#xA;                        matchFound = True ' Datumet är tidigare, och ska därför INTE hanteras. &#xA;                    End If&#xA;                Else&#xA;                    ' Hantera fall där endDate inte är ett giltigt datum&#xA;                    matchFound = False ' Datumet ligger EFTER och ska därför hanteras.&#xA;                End If&#xA;            End If&#xA;        End If&#xA;    End If&#xA;&#x9;&#xA;    ' Kontrollera om vi hittade en matchning&#xA;    If matchFound Then&#xA;        ' Gör något om en matchning hittades&#xA;        dt_HanteraEj.Rows(CInt(RowIndexItem))(&quot;Hanteras ej&quot;) = &quot;Hanteras ej.&quot;&#xA;    Else&#xA;        ' Lägg till rad i kö (Queue) med relevant information om ingen matchning hittades&#xA;        UploadToQueue = True&#xA;    End If&#xA;&#xA;Catch ex As Exception&#xA;    ' Logga undantaget för att se exakt vad som orsakar felet&#xA;    Console.WriteLine(&quot;Fel: &quot; &amp; ex.Message)&#xA;    Console.WriteLine(&quot;Stack Trace: &quot; &amp; ex.StackTrace)&#xA;End Try" DisplayName="Private: Remove Insatser Not to handle" sap:VirtualizedContainerService.HintSize="510,207" sap2010:WorkflowViewState.IdRef="InvokeCode_12">
                                                      <ui:InvokeCode.Arguments>
                                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_OrgExcelFile">[dt_OrgExcelFile]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="InsatserNotToHandle">[InsatserNotToHandle]</InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="RowIndexItem">[CInt(RowIndexItem)]</InArgument>
                                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt_HanteraEj">[dt_HanteraEj]</InOutArgument>
                                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_UploadQueue">[dt_UploadQueue]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="RefName">[RefName]</InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="TotRowNumber">[TotRowNumber]</InArgument>
                                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="UploadToQueue">[UploadToQueue]</OutArgument>
                                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Insatser">[in_dt_Insatser]</InArgument>
                                                      </ui:InvokeCode.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeCode>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,378" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="denna försöker jag även kolla om giltighetsperioden har ett slutdatum. om det har ett slutdatum, hanteras ej, annars hanteras den och ska läggas upp i kön&#xA;&#xA;testa köra, inget gjort det alls än. vet inte vad som int funkar.." Code="Try&#xA;    ' Din ursprungliga kod&#xA;    Dim insatsStr As String = InsatserNotToHandle.ToLower()&#xA;&#xA;    ' Dela upp strängen i en array baserat på semikolon&#xA;    Dim insatser As String() = insatsStr.Split(&quot;;&quot;c)&#xA;&#xA;    ' Hämta värdet från datatabellen för den aktuella raden&#xA;    Dim insatsFromRow As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;INSATS&quot;).ToString().ToLower()&#xA;&#xA;    ' Variabel för att hålla reda på om något matchar&#xA;    Dim matchFound As Boolean = False&#xA;&#x9;&#xA;    Dim periodOfValidity As String = dt_OrgExcelFile.Rows(RowIndexItem)(&quot;GILPERIOD&quot;).ToString().Trim()&#xA;    Console.WriteLine(&quot;SperiodOfValidity&quot;+ periodOfValidity.ToString)&#xA;&#xA;&#x9;&#xA;    Dim dateParts As String() = periodOfValidity.Split(&quot;-&quot;c)&#xA;&#xA;    ' Trimma och hämta det sista datumet&#xA;    Dim endDate As String = dateParts(1).Trim()&#xA;&#xA;    ' Loopa genom varje insats i arrayen och kolla om den finns i cellens värde (detta är insatser som INTE ska hanteras)&#xA;    For Each insats As String In insatser&#xA;        If insatsFromRow Is Nothing OrElse String.IsNullOrEmpty(insatsFromRow) OrElse _&#xA;           insatsFromRow.Equals(insats) OrElse insatsFromRow.StartsWith(insats) Then&#xA;            matchFound = True&#xA;            Exit For ' Avsluta loopen om vi hittar en matchning&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Om ingen matchning hittades i insatser, kolla i dt_Insatser&#xA;    If Not matchFound Then&#xA;        For Each row As DataRow In dt_Insatser.Rows&#xA;            Dim insatsValue As String = row(&quot;Insats i Procapita&quot;).ToString().ToLower()&#xA;&#xA;            ' Kontrollera om insatsFromRow matchar något i kolumnen &quot;Insats i Procapita&quot;&#xA;            If insatsValue.Equals(insatsFromRow) AndAlso _&#xA;               insatsValue IsNot Nothing AndAlso insatsFromRow IsNot Nothing Then&#xA;                matchFound = False&#xA;                Exit For ' Avsluta loopen om en matchning hittas&#xA;            Else&#xA;                matchFound = True&#xA;            End If&#xA;        Next&#xA;    End If&#xA;&#xA;    ' TREDJE CHECKEN - Kolla om sista tecknet i periodOfValidity är en siffra, &quot;-&quot; eller något annat&#xA;    If Not matchFound Then&#xA;        ' Kontrollera om sista tecknet är en siffra eller ett streck&#xA;        If Not String.IsNullOrEmpty(periodOfValidity) Then&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;2 periodOfValidity: &quot;+ periodOfValidity.ToString)&#xA;&#xA;            Dim lastChar As Char = periodOfValidity.Last() ' Hämta sista tecknet i strängen&#xA;&#xA;            ' Kolla om den är öppen (sista tecknet är '-')&#xA;            If lastChar = &quot;-&quot;c Then&#xA;                matchFound = False ' Öppen giltighetsperiod, och hanteras&#xA;            ElseIf String.IsNullOrEmpty(endDate) Then&#xA;                ' Hämta den första dagen i förra månaden&#xA;                Dim firstDayOfLastMonth As DateTime = New DateTime(Now.Year, Now.Month, 1).AddMonths(-1)&#xA;&#xA;                ' Konvertera endDate till ett DateTime-objekt för jämförelse&#xA;                Dim parsedEndDate As DateTime&#xA;                If DateTime.TryParse(endDate, parsedEndDate) Then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Datum end: &quot; + endDate + &quot;firstDayOfLastMonth: &quot; + firstDayOfLastMonth.ToString)&#xA;                    ' Kolla om endDate är tidigare än den första dagen i förra månaden&#xA;                    If parsedEndDate &lt;= firstDayOfLastMonth Then&#xA;                        matchFound = True ' Datumet är tidigare, och ska därför INTE hanteras. &#xA;                    End If&#xA;                Else&#xA;                    ' Hantera fall där endDate inte är ett giltigt datum&#xA;                    matchFound = False ' Datumet ligger EFTER och ska därför hanteras.&#xA;                End If&#xA;            End If&#xA;        End If&#xA;    End If&#xA;&#xA;    ' Kontrollera om vi hittade en matchning&#xA;    If matchFound Then&#xA;        ' Gör något om en matchning hittades&#xA;        dt_HanteraEj.Rows(CInt(RowIndexItem))(&quot;Hanteras ej&quot;) = &quot;Hanteras ej.&quot;&#xA;    Else&#xA;        ' Lägg till rad i kö (Queue) med relevant information om ingen matchning hittades&#xA;        UploadToQueue = True&#xA;    End If&#xA;&#xA;Catch ex As Exception&#xA;    ' Logga undantaget för att se exakt vad som orsakar felet&#xA;    Console.WriteLine(&quot;Fel: &quot; &amp; ex.Message)&#xA;    Console.WriteLine(&quot;Stack Trace: &quot; &amp; ex.StackTrace)&#xA;End Try&#xA;" DisplayName="Private: Remove Insatser Not to handle" sap:VirtualizedContainerService.HintSize="388,267" sap2010:WorkflowViewState.IdRef="InvokeCode_11">
                                                            <ui:InvokeCode.Arguments>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_OrgExcelFile">[dt_OrgExcelFile]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="InsatserNotToHandle">[InsatserNotToHandle]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="RowIndexItem">[CInt(RowIndexItem)]</InArgument>
                                                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt_HanteraEj">[dt_HanteraEj]</InOutArgument>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_UploadQueue">[dt_UploadQueue]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="RefName">[RefName]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="TotRowNumber">[TotRowNumber]</InArgument>
                                                              <OutArgument x:TypeArguments="x:Boolean" x:Key="UploadToQueue">[UploadToQueue]</OutArgument>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Insatser">[in_dt_Insatser]</InArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <If Condition="[UploadToQueue]" DisplayName="If upload QueueItem " sap:VirtualizedContainerService.HintSize="510,780" sap2010:WorkflowViewState.IdRef="If_24">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,598" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Update RefName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("TempRow")]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Object">[RefName]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Update RowIndex" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("RowIndex")]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Object">[RowIndexItem]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Update TotRowNumber" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("TotRowNumber")]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Object">[TotRowNumber]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each Col In dt_UploadQueue" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[dt_UploadQueue.Columns]">
                                                            <ui:ForEach.Body>
                                                              <ActivityAction x:TypeArguments="sd:DataColumn">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentItem" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,224" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                                                  <Sequence.Variables>
                                                                    <Variable x:TypeArguments="x:String" Name="ColName" />
                                                                  </Sequence.Variables>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <InvokeMethod DisplayName="Invoke Method - add Queue Info" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                                                                    <InvokeMethod.TargetObject>
                                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                                    </InvokeMethod.TargetObject>
                                                                    <InArgument x:TypeArguments="x:String">[currentItem.ColumnName]</InArgument>
                                                                    <InArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(CInt(RowIndexItem))(currentItem.ColumnName)]</InArgument>
                                                                  </InvokeMethod>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEach.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEach>
                                                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item To Queue" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddQueueItem_6" ItemInformationCollection="[QueueItemData]" Priority="Normal" QueueType="[QueueName]" Reference="[System.IO.Path.GetFileName(RenamedExcelFile) + &quot;-&quot; + RowIndexItem.ToString +&quot;-&quot; + NrOfPeople.ToString]">
                                                            <ui:AddQueueItem.ItemInformation>
                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                                            </ui:AddQueueItem.ItemInformation>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddQueueItem>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="300,81" sap2010:WorkflowViewState.IdRef="Sequence_121">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If Condition="[dt_OrgExcelFile.Rows(CInt(RowIndexItem))(&quot;INSATS&quot;).ToString.Contains(&quot;Hs &quot;) Or &#xA;dt_OrgExcelFile.Rows(CInt(RowIndexItem))(&quot;INSATS&quot;).ToString.Contains(&quot;Trygghetslarm&quot;) Or &#xA;dt_OrgExcelFile.Rows(CInt(RowIndexItem))(&quot;INSATS&quot;).ToString.Contains(&quot;FB &quot;)]" DisplayName="If - ska hanteras" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_25">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Update dt hanteras ej" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_HanteraEj.Rows(cint(RowIndexItem))("Hanteras ej")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">["Hanteras ej."]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="476,598" sap2010:WorkflowViewState.IdRef="Sequence_114">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Update RefName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("TempRow")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[RefName]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Update RowIndex" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("RowIndex")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[RowIndexItem]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Update TotRowNumber" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(cint(RowIndexItem))("TotRowNumber")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[TotRowNumber]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each Col In dt_UploadQueue" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dt_UploadQueue.Columns]">
                                                                  <ui:ForEach.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataColumn">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentItem" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,224" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="x:String" Name="ColName" />
                                                                        </Sequence.Variables>
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <InvokeMethod DisplayName="Invoke Method - add Queue Info" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                                                                          <InvokeMethod.TargetObject>
                                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                                          </InvokeMethod.TargetObject>
                                                                          <InArgument x:TypeArguments="x:String">[currentItem.ColumnName]</InArgument>
                                                                          <InArgument x:TypeArguments="x:Object">[dt_UploadQueue.Rows(CInt(RowIndexItem))(currentItem.ColumnName)]</InArgument>
                                                                        </InvokeMethod>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEach.Body>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:ForEach>
                                                                <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item To Queue" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddQueueItem_4" ItemInformationCollection="[QueueItemData]" Priority="Normal" QueueType="[QueueName]" Reference="[System.IO.Path.GetFileName(RenamedExcelFile) + &quot;-&quot; + RowIndexItem.ToString +&quot;-&quot; + RefName]">
                                                                  <ui:AddQueueItem.ItemInformation>
                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                                                  </ui:AddQueueItem.ItemInformation>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:AddQueueItem>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEach>
                                            <Assign sap2010:Annotation.AnnotationText="New &quot;Person number&quot;." DisplayName="Update NrOfPeople" sap:VirtualizedContainerService.HintSize="586,113" sap2010:WorkflowViewState.IdRef="Assign_56">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[NrOfPeople]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[NrOfPeople - 1]</InArgument>
                                              </Assign.Value>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                  </Sequence>
                                  <ui:WriteRange AddHeaders="True" DataTable="[dt_HanteraEj]" DisplayName="Private: Write Range Workbook" sap:VirtualizedContainerService.HintSize="724,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" Password="[ExcelPassword]" SheetName="[SheetName]" StartingCell="AK1" WorkbookPath="[RenamedExcelFile]" />
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachFileX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachFileX>
                </Sequence>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID4" Condition="[dt_UploadQueue Is Nothing OrElse dt_UploadQueue.RowCount = 0]" DisplayName="Any Excelfile Found?" sap:VirtualizedContainerService.HintSize="114,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">383,472.04</av:Point>
                        <av:Size x:Key="ShapeSize">114,87</av:Size>
                        <av:PointCollection x:Key="TrueConnector">383,515.54 353,515.54 353,516.04 310.5,516.04</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">497,515.54 557,515.54 557,153.5 400,153.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">110.5,490.04</av:Point>
                            <av:Size x:Key="ShapeSize">200,52</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message No New File " sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Not found any excel file to process&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart>
    <If sap2010:Annotation.AnnotationText="This optional step can be used to include more information about a transaction item and it is used mainly for logging and visualization purposes.&#xA;For example, if transaction items are invoices, then out_TransactionID can be the invoice number, out_TransactionField1 can be the invoice date and out_TransactionField2 can be the invoice amount." Condition="[out_TransactionItem isNot Nothing]" DisplayName="If a new transaction item is retrieved, get additional information about it" sap:VirtualizedContainerService.HintSize="634,274" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="Write data to the added log fields that identify the transaction." DisplayName="Add transaction information to log fields" sap:VirtualizedContainerService.HintSize="476,413" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign out_TransactionID" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign out_TransactionField1" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign out_TransactionField2" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_8" />
      </If.Else>
    </If>
  </Sequence>
</Activity>